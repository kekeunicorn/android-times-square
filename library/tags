	Session.vim	/^cmap  <Home>$/;"	m
	Session.vim	/^cmap  <Left>$/;"	m
	Session.vim	/^cnoremap  <Del>$/;"	m
	Session.vim	/^cmap  <End>$/;"	m
	Session.vim	/^cmap  <Right>$/;"	m
	Session.vim	/^cnoremap  <BS>$/;"	m
		Session.vim	/^inoremap <silent> 	 =TriggerSnippet()$/;"	m
	Session.vim	/^map   \/$/;"	m
	Session.vim	/^cnoremap  $/;"	m
	Session.vim	/^noremap  :TagbarToggle$/;"	m
	Session.vim	/^cmap  <Down>$/;"	m
	Session.vim	/^imap  <Plug>SuperTabForward$/;"	m
	Session.vim	/^cmap  <Up>$/;"	m
	Session.vim	/^imap  <Plug>SuperTabBackward$/;"	m
		Session.vim	/^inoremap <silent> 	 =ShowAvailableSnips()$/;"	m
c	Session.vim	/^nmap c :cs find c =expand("<cword>")$/;"	m
d	Session.vim	/^nmap d :cs find d =expand("<cword>")$/;"	m
e	Session.vim	/^nmap e :cs find e =expand("<cword>")$/;"	m
f	Session.vim	/^nmap f :cs find f =expand("<cfile>")$/;"	m
g	Session.vim	/^nmap g :cs find g =expand("<cword>")$/;"	m
i	Session.vim	/^nmap i :cs find i ^=expand("<cfile>")$/;"	m
s	Session.vim	/^nmap s :cs find s =expand("<cword>")$/;"	m
t	Session.vim	/^nmap t :cs find t =expand("<cword>")$/;"	m
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$<	Session.vim	/^vnoremap $< `>a -->`<i<!-- $/;"	m
$$	Session.vim	/^vnoremap $$ `>a"`<i"$/;"	m
$/	Session.vim	/^vnoremap $\/ `>a*\/`<i\/*$/;"	m
$1	Session.vim	/^vnoremap $1 `>a)`<i($/;"	m
$2	Session.vim	/^vnoremap $2 `>a]`<i[$/;"	m
$3	Session.vim	/^vnoremap $3 `>a}`<i{$/;"	m
$q	Session.vim	/^vnoremap $q `>a'`<i'$/;"	m
$td	Session.vim	/^cnoremap $td tabnew ~\/Desktop\/$/;"	m
$th	Session.vim	/^cnoremap $th tabnew ~\/$/;"	m
$w	Session.vim	/^vnoremap $w `>a"`<i"$/;"	m
,ac	Session.vim	/^map ,ac :!adb_connect && pactive $TARGET$/;"	m
,al	Session.vim	/^map ,al :!adb_connect&&adb logcat$/;"	m
,b	Session.vim	/^nnoremap <silent> ,b :CommandTBuffer$/;"	m
,bc	Session.vim	/^noremap <silent> ,bc :!find . -name *.java > cscope.files && cscope -b -q$/;"	m
,bt	Session.vim	/^map <silent> ,bt :!ctags -R --exclude=\\.* $/;"	m
,c	Session.vim	/^nmap ,c  <Plug>NERDCommenterToggle$/;"	m
,c$	Session.vim	/^nmap ,c$ <Plug>NERDCommenterToEOL$/;"	m
,cA	Session.vim	/^nmap ,cA <Plug>NERDCommenterAppend$/;"	m
,cD	Session.vim	/^nmap <silent> ,cD <Plug>VCSDelete$/;"	m
,cG	Session.vim	/^nmap <silent> ,cG <Plug>VCSClearAndGotoOriginal$/;"	m
,cL	Session.vim	/^nmap <silent> ,cL <Plug>VCSLock$/;"	m
,cN	Session.vim	/^nmap <silent> ,cN <Plug>VCSSplitAnnotate$/;"	m
,cU	Session.vim	/^nmap <silent> ,cU <Plug>VCSUnlock$/;"	m
,ca	Session.vim	/^nmap ,ca <Plug>NERDCommenterAltDelims$/;"	m
,caL	Session.vim	/^nmap ,caL <Plug>CalendarH$/;"	m
,cal	Session.vim	/^nmap ,cal <Plug>CalendarV$/;"	m
,cb	Session.vim	/^nmap ,cb <Plug>NERDCommenterAlignBoth$/;"	m
,cc	Session.vim	/^nmap ,cc <Plug>NERDCommenterComment$/;"	m
,cd	Session.vim	/^noremap ,cd :call CdToProjectRoot()$/;"	m
,cg	Session.vim	/^nmap <silent> ,cg <Plug>VCSGotoOriginal$/;"	m
,ci	Session.vim	/^nmap ,ci <Plug>NERDCommenterInvert$/;"	m
,cl	Session.vim	/^nmap ,cl <Plug>NERDCommenterAlignLeft$/;"	m
,cm	Session.vim	/^nmap ,cm <Plug>NERDCommenterMinimal$/;"	m
,cn	Session.vim	/^nmap ,cn <Plug>NERDCommenterNested$/;"	m
,cp	Session.vim	/^vnoremap ,cp :call CopySelectionLines()$/;"	m
,cq	Session.vim	/^nmap <silent> ,cq <Plug>VCSRevert$/;"	m
,cr	Session.vim	/^nmap <silent> ,cr <Plug>VCSReview$/;"	m
,cs	Session.vim	/^nmap ,cs <Plug>NERDCommenterSexy$/;"	m
,cu	Session.vim	/^nmap ,cu <Plug>NERDCommenterUncomment$/;"	m
,cv	Session.vim	/^nmap <silent> ,cv <Plug>VCSVimDiff$/;"	m
,cy	Session.vim	/^nmap ,cy <Plug>NERDCommenterYank$/;"	m
,di	Session.vim	/^noremap ,di :call DebugInnerClass()$/;"	m
,do	Session.vim	/^noremap ,do :call DebugOuterClass()$/;"	m
,es	Session.vim	/^nmap ,es :call EditSnippet()$/;"	m
,et	Session.vim	/^nmap ,et :exec "e ~\/.vim\/ftplugin\/".&filetype.".vim"$/;"	m
,fb	Session.vim	/^noremap ,fb viB:g!#^.*\/\/#Tabularize \/,$/;"	m
,fd	Session.vim	/^nmap ,fd :se ff=dos$/;"	m
,fu	Session.vim	/^nmap ,fu :se ff=unix$/;"	m
,ig	Session.vim	/^nmap <silent> ,ig <Plug>IndentGuidesToggle$/;"	m
,m	Session.vim	/^noremap ,m :make$/;"	m
,p	Session.vim	/^vnoremap ,p :call EchoSelectionLines()$/;"	m
,pl	Session.vim	/^noremap ,pl :call PushLarge()$/;"	m
,pt	Session.vim	/^map ,pt :set invpaste$/;"	m
,py	Session.vim	/^noremap ,py :call PushYlzhao()$/;"	m
,rr	Session.vim	/^nmap ,rr :call ReloadSnippets(snippets_dir, &filetype)$/;"	m
,s?	Session.vim	/^map ,s? z=$/;"	m
,sa	Session.vim	/^map ,sa zg$/;"	m
,scd	Session.vim	/^nmap ,scd <Plug>SQLUGetColumnDef$/;"	m
,scdt	Session.vim	/^nmap ,scdt <Plug>SQLUGetColumnDataType$/;"	m
,scl	Session.vim	/^nmap ,scl <Plug>SQLUCreateColumnList$/;"	m
,scp	Session.vim	/^nmap ,scp <Plug>SQLUCreateProcedure$/;"	m
,sf	Session.vim	/^nmap ,sf <Plug>SQLUFormatter$/;"	m
,sf	Session.vim	/^vmap ,sf <Plug>SQLUFormatter$/;"	m
,sfr	Session.vim	/^nmap ,sfr <Plug>SQLUFormatStmts$/;"	m
,sfr	Session.vim	/^vmap ,sfr <Plug>SQLUFormatStmts$/;"	m
,sfs	Session.vim	/^nmap ,sfs <Plug>SQLUFormatter$/;"	m
,sfs	Session.vim	/^vmap ,sfs <Plug>SQLUFormatter$/;"	m
,sn	Session.vim	/^map ,sn ]$/;"	m
,sp	Session.vim	/^map ,sp [$/;"	m
,t	Session.vim	/^nnoremap <silent> ,t :CommandT$/;"	m
,tc	Session.vim	/^noremap ,tc :!adb_connect$/;"	m
,tcd	Session.vim	/^noremap ,tcd :call ClearDb()$/;"	m
,tr	Session.vim	/^noremap ,tr :!adb shell stop; sleep 2; adb shell start$/;"	m
,ts	Session.vim	/^noremap ,ts :!target_sync$/;"	m
,u	Session.vim	/^noremap ,u hgUiwe$/;"	m
,va	Session.vim	/^nnoremap ,va :e ~\/.config\/awesome\/rc.lua$/;"	m
,vac	Session.vim	/^nnoremap ,vac :!make clean$/;"	m
,vcg	Session.vim	/^noremap ,vcg :e =language_dir$/;"	m
,vcs	Session.vim	/^noremap ,vcs :e res\/values-zh-rCN\/strings.xml$/;"	m
,vd	Session.vim	/^nnoremap ,vd :!mvn android:deploy$/;"	m
,veg	Session.vim	/^noremap ,veg :e =language_dir$/;"	m
,ves	Session.vim	/^noremap ,ves :e res\/values\/strings.xml$/;"	m
,vf	Session.vim	/^nnoremap ,vf :let @f=expand("%:t:r")$/;"	m
,vh	Session.vim	/^nnoremap ,vh gg\/class$/;"	m
,vjs	Session.vim	/^map ,vjs :sp ~\/.vim\/snippets\/java.snippets$/;"	m
,vl	Session.vim	/^noremap ,vl :cla$/;"	m
,vn	Session.vim	/^nnoremap ,vn :call EditSnippet()$/;"	m
,vp	Session.vim	/^noremap ,vp :let @p=expand("%:p")$/;"	m
,vr	Session.vim	/^nnoremap ,vr :make runa$/;"	m
,vs	Session.vim	/^map ,vs :so ~\/.vimrc$/;"	m
,vt	Session.vim	/^nnoremap ,vt :call EditFileType()$/;"	m
,vu	Session.vim	/^nnoremap ,vu :!ant uninstall$/;"	m
,vv	Session.vim	/^map ,vv :e ~\/.vimrc$/;"	m
,vxs	Session.vim	/^map ,vxs :sp ~\/.vim\/snippets\/xml.snippets$/;"	m
,w	Session.vim	/^nmap ,w :w!$/;"	m
,wc	Session.vim	/^map ,wc :call SwitchToProject("CONTACTS")$/;"	m
,wf	Session.vim	/^map ,wf :call SwitchToProject("FRA")$/;"	m
,wh	Session.vim	/^map ,wh :call SwitchToProject("CALL_HISTORY")$/;"	m
,wp	Session.vim	/^map ,wp :call SwitchToProject("PROVIDER")$/;"	m
,wr	Session.vim	/^map ,wr :call SwitchToProject("RES")$/;"	m
,x	Session.vim	/^nmap ,x :xa!$/;"	m
,y	Session.vim	/^map ,y :YRShow$/;"	m
,z	Session.vim	/^map ,z <Plug>ZoomWin$/;"	m
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := test$/;"	m
0	Session.vim	/^map 0 ^$/;"	m
0	Session.vim	/^normal! 0$/;"	m
<C-Tab>	Session.vim	/^inoremap <C-Tab> 	$/;"	m
<F2>	Session.vim	/^noremap <F2> :NERDTreeToggle$/;"	m
<F3>	Session.vim	/^map <F3> :Tlist$/;"	m
<F9>	Session.vim	/^map <F9> ggVGg?$/;"	m
<Nul><Nul>c	Session.vim	/^nmap <Nul><Nul>c :vert scs find c =expand("<cword>")$/;"	m
<Nul><Nul>d	Session.vim	/^nmap <Nul><Nul>d :vert scs find d =expand("<cword>")$/;"	m
<Nul><Nul>e	Session.vim	/^nmap <Nul><Nul>e :vert scs find e =expand("<cword>")$/;"	m
<Nul><Nul>f	Session.vim	/^nmap <Nul><Nul>f :vert scs find f =expand("<cfile>")$/;"	m
<Nul><Nul>g	Session.vim	/^nmap <Nul><Nul>g :vert scs find g =expand("<cword>")$/;"	m
<Nul><Nul>i	Session.vim	/^nmap <Nul><Nul>i :vert scs find i ^=expand("<cfile>")$/;"	m
<Nul><Nul>s	Session.vim	/^nmap <Nul><Nul>s :vert scs find s =expand("<cword>")$/;"	m
<Nul><Nul>t	Session.vim	/^nmap <Nul><Nul>t :vert scs find t =expand("<cword>")$/;"	m
<Nul>c	Session.vim	/^nmap <Nul>c :scs find c =expand("<cword>")$/;"	m
<Nul>d	Session.vim	/^nmap <Nul>d :scs find d =expand("<cword>")$/;"	m
<Nul>e	Session.vim	/^nmap <Nul>e :scs find e =expand("<cword>")$/;"	m
<Nul>f	Session.vim	/^nmap <Nul>f :scs find f =expand("<cfile>")$/;"	m
<Nul>g	Session.vim	/^nmap <Nul>g :scs find g =expand("<cword>")$/;"	m
<Nul>i	Session.vim	/^nmap <Nul>i :scs find i ^=expand("<cfile>")$/;"	m
<Nul>s	Session.vim	/^nmap <Nul>s :scs find s =expand("<cword>")$/;"	m
<Nul>t	Session.vim	/^nmap <Nul>t :scs find t =expand("<cword>")$/;"	m
<Plug>CVSEdit	Session.vim	/^nnoremap <silent> <Plug>CVSEdit :CVSEdit$/;"	m
<Plug>CVSEditors	Session.vim	/^nnoremap <silent> <Plug>CVSEditors :CVSEditors$/;"	m
<Plug>CVSUnedit	Session.vim	/^nnoremap <silent> <Plug>CVSUnedit :CVSUnedit$/;"	m
<Plug>CVSWatchAdd	Session.vim	/^nnoremap <silent> <Plug>CVSWatchAdd :CVSWatch add$/;"	m
<Plug>CVSWatchOff	Session.vim	/^nnoremap <silent> <Plug>CVSWatchOff :CVSWatch off$/;"	m
<Plug>CVSWatchOn	Session.vim	/^nnoremap <silent> <Plug>CVSWatchOn :CVSWatch on$/;"	m
<Plug>CVSWatchRemove	Session.vim	/^nnoremap <silent> <Plug>CVSWatchRemove :CVSWatch remove$/;"	m
<Plug>CVSWatchers	Session.vim	/^nnoremap <silent> <Plug>CVSWatchers :CVSWatchers$/;"	m
<Plug>CalendarH	Session.vim	/^nnoremap <silent> <Plug>CalendarH :cal Calendar(1)$/;"	m
<Plug>CalendarV	Session.vim	/^nnoremap <silent> <Plug>CalendarV :cal Calendar(0)$/;"	m
<Plug>NERDCommenterAlignBoth	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("n", "AlignBoth")$/;"	m
<Plug>NERDCommenterAlignLeft	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("n", "AlignLeft")$/;"	m
<Plug>NERDCommenterAppend	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterAppend :call NERDComment("n", "Append")$/;"	m
<Plug>NERDCommenterComment	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("n", "Comment")$/;"	m
<Plug>NERDCommenterInsert	Session.vim	/^inoremap <silent> <Plug>NERDCommenterInsert  <BS>:call NERDComment('i', "insert")$/;"	m
<Plug>NERDCommenterInvert	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("n", "Invert")$/;"	m
<Plug>NERDCommenterMinimal	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("n", "Minimal")$/;"	m
<Plug>NERDCommenterNested	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("n", "Nested")$/;"	m
<Plug>NERDCommenterSexy	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("n", "Sexy")$/;"	m
<Plug>NERDCommenterToEOL	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment("n", "ToEOL")$/;"	m
<Plug>NERDCommenterToggle	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("n", "Toggle")$/;"	m
<Plug>NERDCommenterUncomment	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("n", "Uncomment")$/;"	m
<Plug>NERDCommenterYank	Session.vim	/^nnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("n", "Yank")$/;"	m
<Plug>NetrwBrowseX	Session.vim	/^nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)$/;"	m
<Plug>VCSAdd	Session.vim	/^nnoremap <silent> <Plug>VCSAdd :VCSAdd$/;"	m
<Plug>VCSAnnotate	Session.vim	/^nnoremap <silent> <Plug>VCSAnnotate :VCSAnnotate$/;"	m
<Plug>VCSClearAndGotoOriginal	Session.vim	/^nnoremap <silent> <Plug>VCSClearAndGotoOriginal :VCSGotoOriginal!$/;"	m
<Plug>VCSCommit	Session.vim	/^nnoremap <silent> <Plug>VCSCommit :VCSCommit$/;"	m
<Plug>VCSDelete	Session.vim	/^nnoremap <silent> <Plug>VCSDelete :VCSDelete$/;"	m
<Plug>VCSDiff	Session.vim	/^nnoremap <silent> <Plug>VCSDiff :VCSDiff$/;"	m
<Plug>VCSGotoOriginal	Session.vim	/^nnoremap <silent> <Plug>VCSGotoOriginal :VCSGotoOriginal$/;"	m
<Plug>VCSInfo	Session.vim	/^nnoremap <silent> <Plug>VCSInfo :VCSInfo$/;"	m
<Plug>VCSLock	Session.vim	/^nnoremap <silent> <Plug>VCSLock :VCSLock$/;"	m
<Plug>VCSLog	Session.vim	/^nnoremap <silent> <Plug>VCSLog :VCSLog$/;"	m
<Plug>VCSRevert	Session.vim	/^nnoremap <silent> <Plug>VCSRevert :VCSRevert$/;"	m
<Plug>VCSReview	Session.vim	/^nnoremap <silent> <Plug>VCSReview :VCSReview$/;"	m
<Plug>VCSSplitAnnotate	Session.vim	/^nnoremap <silent> <Plug>VCSSplitAnnotate :VCSAnnotate!$/;"	m
<Plug>VCSStatus	Session.vim	/^nnoremap <silent> <Plug>VCSStatus :VCSStatus$/;"	m
<Plug>VCSUnlock	Session.vim	/^nnoremap <silent> <Plug>VCSUnlock :VCSUnlock$/;"	m
<Plug>VCSUpdate	Session.vim	/^nnoremap <silent> <Plug>VCSUpdate :VCSUpdate$/;"	m
<Plug>VCSVimDiff	Session.vim	/^nnoremap <silent> <Plug>VCSVimDiff :VCSVimDiff$/;"	m
<S-Tab>	Session.vim	/^inoremap <silent> <S-Tab> =BackwardsSnippet()$/;"	m
CalendarCellView	src/com/squareup/timessquare/CalendarCellView.java	/^  public CalendarCellView(Context context) {$/;"	m	class:CalendarCellView
CalendarCellView	src/com/squareup/timessquare/CalendarCellView.java	/^  public CalendarCellView(Context context, AttributeSet attrs) {$/;"	m	class:CalendarCellView
CalendarCellView	src/com/squareup/timessquare/CalendarCellView.java	/^  public CalendarCellView(Context context, AttributeSet attrs, int defStyle) {$/;"	m	class:CalendarCellView
CalendarCellView	src/com/squareup/timessquare/CalendarCellView.java	/^public class CalendarCellView extends TextView {$/;"	c
CalendarGridView	src/com/squareup/timessquare/CalendarGridView.java	/^  public CalendarGridView(Context context, AttributeSet attrs) {$/;"	m	class:CalendarGridView
CalendarGridView	src/com/squareup/timessquare/CalendarGridView.java	/^public class CalendarGridView extends ViewGroup {$/;"	c
CalendarPickerView	src/com/squareup/timessquare/CalendarPickerView.java	/^    public CalendarPickerView(Context context, AttributeSet attrs) {$/;"	m	class:CalendarPickerView
CalendarPickerView	src/com/squareup/timessquare/CalendarPickerView.java	/^public class CalendarPickerView extends ListView {$/;"	c
CalendarPickerViewTest	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^public class CalendarPickerViewTest {$/;"	c
CalendarRowView	src/com/squareup/timessquare/CalendarRowView.java	/^  public CalendarRowView(Context context, AttributeSet attrs) {$/;"	m	class:CalendarRowView
CalendarRowView	src/com/squareup/timessquare/CalendarRowView.java	/^public class CalendarRowView extends ViewGroup implements View.OnClickListener {$/;"	c
CellClickedListener	src/com/squareup/timessquare/CalendarPickerView.java	/^    private class CellClickedListener implements MonthView.Listener {$/;"	c	class:CalendarPickerView
CloseRule	src/com/squareup/timessquare/CloseRule.java	/^public class CloseRule {$/;"	c
DateSelectableFilter	src/com/squareup/timessquare/CalendarPickerView.java	/^    public interface DateSelectableFilter {$/;"	i	class:CalendarPickerView
DefaultOnInvalidDateSelectedListener	src/com/squareup/timessquare/CalendarPickerView.java	/^    private class DefaultOnInvalidDateSelectedListener implements OnInvalidDateSelectedListener {$/;"	c	class:CalendarPickerView
FIRST	src/com/squareup/timessquare/MonthCellDescriptor.java	/^    NONE, FIRST, MIDDLE, LAST$/;"	e	enum:MonthCellDescriptor.RangeState	file:
FluentInitializer	src/com/squareup/timessquare/CalendarPickerView.java	/^    public class FluentInitializer {$/;"	c	class:CalendarPickerView
LAST	src/com/squareup/timessquare/MonthCellDescriptor.java	/^    NONE, FIRST, MIDDLE, LAST$/;"	e	enum:MonthCellDescriptor.RangeState	file:
Listener	src/com/squareup/timessquare/MonthView.java	/^  public interface Listener {$/;"	i	class:MonthView
Logr	src/com/squareup/timessquare/Logr.java	/^final class Logr {$/;"	c
MIDDLE	src/com/squareup/timessquare/MonthCellDescriptor.java	/^    NONE, FIRST, MIDDLE, LAST$/;"	e	enum:MonthCellDescriptor.RangeState	file:
MULTIPLE	src/com/squareup/timessquare/CalendarPickerView.java	/^            MULTIPLE,$/;"	e	enum:CalendarPickerView.SelectionMode	file:
MonthAdapter	src/com/squareup/timessquare/CalendarPickerView.java	/^        private MonthAdapter() {$/;"	m	class:CalendarPickerView.MonthAdapter	file:
MonthAdapter	src/com/squareup/timessquare/CalendarPickerView.java	/^    private class MonthAdapter extends BaseAdapter {$/;"	c	class:CalendarPickerView
MonthCellDescriptor	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  MonthCellDescriptor(Date date, boolean currentMonth, boolean selectable, boolean selected,$/;"	m	class:MonthCellDescriptor
MonthCellDescriptor	src/com/squareup/timessquare/MonthCellDescriptor.java	/^class MonthCellDescriptor {$/;"	c
MonthCellWithMonthIndex	src/com/squareup/timessquare/CalendarPickerView.java	/^        public MonthCellWithMonthIndex(MonthCellDescriptor cell, int monthIndex) {$/;"	m	class:CalendarPickerView.MonthCellWithMonthIndex
MonthCellWithMonthIndex	src/com/squareup/timessquare/CalendarPickerView.java	/^    private static class MonthCellWithMonthIndex {$/;"	c	class:CalendarPickerView
MonthDescriptor	src/com/squareup/timessquare/MonthDescriptor.java	/^  public MonthDescriptor(int month, int year, Date date, String label) {$/;"	m	class:MonthDescriptor
MonthDescriptor	src/com/squareup/timessquare/MonthDescriptor.java	/^class MonthDescriptor {$/;"	c
MonthView	src/com/squareup/timessquare/MonthView.java	/^  public MonthView(Context context, AttributeSet attrs) {$/;"	m	class:MonthView
MonthView	src/com/squareup/timessquare/MonthView.java	/^public class MonthView extends LinearLayout {$/;"	c
NONE	src/com/squareup/timessquare/MonthCellDescriptor.java	/^    NONE, FIRST, MIDDLE, LAST$/;"	e	enum:MonthCellDescriptor.RangeState	file:
OnDateSelectedListener	src/com/squareup/timessquare/CalendarPickerView.java	/^    public interface OnDateSelectedListener {$/;"	i	class:CalendarPickerView
OnInvalidDateSelectedListener	src/com/squareup/timessquare/CalendarPickerView.java	/^    public interface OnInvalidDateSelectedListener {$/;"	i	class:CalendarPickerView
RANGE	src/com/squareup/timessquare/CalendarPickerView.java	/^            RANGE$/;"	e	enum:CalendarPickerView.SelectionMode	file:
RangeState	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  public enum RangeState {$/;"	g	class:MonthCellDescriptor
SINGLE	src/com/squareup/timessquare/CalendarPickerView.java	/^        SINGLE,$/;"	e	enum:CalendarPickerView.SelectionMode	file:
STATE_CURRENT_MONTH	src/com/squareup/timessquare/CalendarCellView.java	/^  private static final int[] STATE_CURRENT_MONTH = {$/;"	f	class:CalendarCellView	file:
STATE_RANGE_FIRST	src/com/squareup/timessquare/CalendarCellView.java	/^  private static final int[] STATE_RANGE_FIRST = {$/;"	f	class:CalendarCellView	file:
STATE_RANGE_LAST	src/com/squareup/timessquare/CalendarCellView.java	/^  private static final int[] STATE_RANGE_LAST = {$/;"	f	class:CalendarCellView	file:
STATE_RANGE_MIDDLE	src/com/squareup/timessquare/CalendarCellView.java	/^  private static final int[] STATE_RANGE_MIDDLE = {$/;"	f	class:CalendarCellView	file:
STATE_SELECTABLE	src/com/squareup/timessquare/CalendarCellView.java	/^  private static final int[] STATE_SELECTABLE = {$/;"	f	class:CalendarCellView	file:
STATE_TODAY	src/com/squareup/timessquare/CalendarCellView.java	/^  private static final int[] STATE_TODAY = {$/;"	f	class:CalendarCellView	file:
SelectionMode	src/com/squareup/timessquare/CalendarPickerView.java	/^    public enum SelectionMode {$/;"	g	class:CalendarPickerView
SessionLoad	Session.vim	/^let SessionLoad = 1$/;"	v
[%	Session.vim	/^vmap [% [%m'gv``$/;"	m
]%	Session.vim	/^vmap ]% ]%m'gv``$/;"	m
a%	Session.vim	/^vmap a% [%v]%$/;"	m
aC	Session.vim	/^onoremap <silent> aC :call TextObjWordBasedColumn("aW")$/;"	m
ac	Session.vim	/^onoremap <silent> ac :call TextObjWordBasedColumn("aw")$/;"	m
adapter	src/com/squareup/timessquare/CalendarPickerView.java	/^    private final CalendarPickerView.MonthAdapter adapter;$/;"	f	class:CalendarPickerView	file:
addView	src/com/squareup/timessquare/CalendarGridView.java	/^  @Override public void addView(View child, int index, ViewGroup.LayoutParams params) {$/;"	m	class:CalendarGridView
addView	src/com/squareup/timessquare/CalendarRowView.java	/^  @Override public void addView(View child, int index, ViewGroup.LayoutParams params) {$/;"	m	class:CalendarRowView
applyMultiSelect	src/com/squareup/timessquare/CalendarPickerView.java	/^    private Date applyMultiSelect(Date date, Calendar selectedCal) {$/;"	m	class:CalendarPickerView	file:
assertCell	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private static void assertCell(List<List<MonthCellDescriptor>> cells, int row, int col,$/;"	m	class:CalendarPickerViewTest	file:
assertOneDateSelected	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private void assertOneDateSelected() {$/;"	m	class:CalendarPickerViewTest	file:
assertRangeSelected	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private void assertRangeSelected() {$/;"	m	class:CalendarPickerViewTest	file:
assertRangeSelectionBehavior	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private void assertRangeSelectionBehavior() {$/;"	m	class:CalendarPickerViewTest	file:
betweenDates	src/com/squareup/timessquare/CalendarPickerView.java	/^    private static boolean betweenDates(Calendar cal, Calendar minCal, Calendar maxCal) {$/;"	m	class:CalendarPickerView	file:
betweenDates	src/com/squareup/timessquare/CalendarPickerView.java	/^    static boolean betweenDates(Date date, Calendar minCal, Calendar maxCal) {$/;"	m	class:CalendarPickerView
build	src/com/squareup/timessquare/CloseRule.java	/^    public Set<Integer> build() {$/;"	m	class:CloseRule
buildCal	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private Calendar buildCal(int year, @MagicConstant(intValues = {$/;"	m	class:CalendarPickerViewTest	file:
cell	src/com/squareup/timessquare/CalendarPickerView.java	/^        public MonthCellDescriptor cell;$/;"	f	class:CalendarPickerView.MonthCellWithMonthIndex
cellSize	src/com/squareup/timessquare/CalendarRowView.java	/^  private int cellSize;$/;"	f	class:CalendarRowView	file:
cells	src/com/squareup/timessquare/CalendarPickerView.java	/^    private final List<List<List<MonthCellDescriptor>>> cells =$/;"	f	class:CalendarPickerView	file:
clearOldSelections	src/com/squareup/timessquare/CalendarPickerView.java	/^    private void clearOldSelections() {$/;"	m	class:CalendarPickerView	file:
com.squareup.timessquare	src/com/squareup/timessquare/CalendarCellView.java	/^package com.squareup.timessquare;$/;"	p
com.squareup.timessquare	src/com/squareup/timessquare/CalendarGridView.java	/^package com.squareup.timessquare;$/;"	p
com.squareup.timessquare	src/com/squareup/timessquare/CalendarPickerView.java	/^package com.squareup.timessquare;$/;"	p
com.squareup.timessquare	src/com/squareup/timessquare/CalendarRowView.java	/^package com.squareup.timessquare;$/;"	p
com.squareup.timessquare	src/com/squareup/timessquare/CloseRule.java	/^package com.squareup.timessquare;$/;"	p
com.squareup.timessquare	src/com/squareup/timessquare/Logr.java	/^package com.squareup.timessquare;$/;"	p
com.squareup.timessquare	src/com/squareup/timessquare/MonthCellDescriptor.java	/^package com.squareup.timessquare;$/;"	p
com.squareup.timessquare	src/com/squareup/timessquare/MonthDescriptor.java	/^package com.squareup.timessquare;$/;"	p
com.squareup.timessquare	src/com/squareup/timessquare/MonthView.java	/^package com.squareup.timessquare;$/;"	p
com.squareup.timessquare	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^package com.squareup.timessquare;$/;"	p
containsDate	src/com/squareup/timessquare/CalendarPickerView.java	/^    private static boolean containsDate(List<Calendar> selectedCals, Calendar cal) {$/;"	m	class:CalendarPickerView	file:
create	src/com/squareup/timessquare/MonthView.java	/^  public static MonthView create(ViewGroup parent, LayoutInflater inflater,$/;"	m	class:MonthView
d	src/com/squareup/timessquare/Logr.java	/^  public static void d(String message) {$/;"	m	class:Logr
d	src/com/squareup/timessquare/Logr.java	/^  public static void d(String message, Object... args) {$/;"	m	class:Logr
d1	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private Date d1 = getDate(1);$/;"	f	class:CalendarPickerViewTest	file:
d2	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private Date d2 = getDate(2);$/;"	f	class:CalendarPickerViewTest	file:
d20	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private Date d20 = getDate(20);$/;"	f	class:CalendarPickerViewTest	file:
d3	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private Date d3 = getDate(3);$/;"	f	class:CalendarPickerViewTest	file:
d4	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private Date d4 = getDate(4);$/;"	f	class:CalendarPickerViewTest	file:
d5	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private Date d5 = getDate(5);$/;"	f	class:CalendarPickerViewTest	file:
d8	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private Date d8 = getDate(8);$/;"	f	class:CalendarPickerViewTest	file:
date	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  private final Date date;$/;"	f	class:MonthCellDescriptor	file:
date	src/com/squareup/timessquare/MonthDescriptor.java	/^  private final Date date;$/;"	f	class:MonthDescriptor	file:
dateConfiguredListener	src/com/squareup/timessquare/CalendarPickerView.java	/^    private DateSelectableFilter dateConfiguredListener;$/;"	f	class:CalendarPickerView	file:
dateListener	src/com/squareup/timessquare/CalendarPickerView.java	/^    private OnDateSelectedListener dateListener;$/;"	f	class:CalendarPickerView	file:
dbg	src/com/squareup/timessquare/CalendarPickerView.java	/^    private static String dbg(Date minDate, Date maxDate) {$/;"	m	class:CalendarPickerView	file:
dispatchDraw	src/com/squareup/timessquare/CalendarGridView.java	/^  @Override protected void dispatchDraw(Canvas canvas) {$/;"	m	class:CalendarGridView
dividerPaint	src/com/squareup/timessquare/CalendarGridView.java	/^  private final Paint dividerPaint = new Paint();$/;"	f	class:CalendarGridView	file:
doSelectDate	src/com/squareup/timessquare/CalendarPickerView.java	/^    private boolean doSelectDate(Date date, MonthCellDescriptor cell) {$/;"	m	class:CalendarPickerView	file:
drawChild	src/com/squareup/timessquare/CalendarGridView.java	/^  @Override protected boolean drawChild(Canvas canvas, View child, long drawingTime) {$/;"	m	class:CalendarGridView
encode	src/com/squareup/timessquare/CloseRule.java	/^    public static int encode(Date date) {$/;"	m	class:CloseRule
fullDateFormat	src/com/squareup/timessquare/CalendarPickerView.java	/^    private DateFormat fullDateFormat;$/;"	f	class:CalendarPickerView	file:
getCells	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private List<List<MonthCellDescriptor>> getCells(int month, int year) {$/;"	m	class:CalendarPickerViewTest	file:
getCount	src/com/squareup/timessquare/CalendarPickerView.java	/^        @Override public int getCount() {$/;"	m	class:CalendarPickerView.MonthAdapter
getDate	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  public Date getDate() {$/;"	m	class:MonthCellDescriptor
getDate	src/com/squareup/timessquare/MonthDescriptor.java	/^  public Date getDate() {$/;"	m	class:MonthDescriptor
getDate	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private static Date getDate(int date) {$/;"	m	class:CalendarPickerViewTest	file:
getDateRules	src/com/squareup/timessquare/CloseRule.java	/^    public static List<Date> getDateRules() {$/;"	m	class:CloseRule
getItem	src/com/squareup/timessquare/CalendarPickerView.java	/^        @Override public Object getItem(int position) {$/;"	m	class:CalendarPickerView.MonthAdapter
getItemId	src/com/squareup/timessquare/CalendarPickerView.java	/^        @Override public long getItemId(int position) {$/;"	m	class:CalendarPickerView.MonthAdapter
getLabel	src/com/squareup/timessquare/MonthDescriptor.java	/^  public String getLabel() {$/;"	m	class:MonthDescriptor
getMonth	src/com/squareup/timessquare/MonthDescriptor.java	/^  public int getMonth() {$/;"	m	class:MonthDescriptor
getMonthCellWithIndexByDate	src/com/squareup/timessquare/CalendarPickerView.java	/^    private MonthCellWithMonthIndex getMonthCellWithIndexByDate(Date date) {$/;"	m	class:CalendarPickerView	file:
getMonthCells	src/com/squareup/timessquare/CalendarPickerView.java	/^    List<List<MonthCellDescriptor>> getMonthCells(MonthDescriptor month, Calendar startCal) {$/;"	m	class:CalendarPickerView
getRangeState	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  public RangeState getRangeState() {$/;"	m	class:MonthCellDescriptor
getRules	src/com/squareup/timessquare/CloseRule.java	/^    public static List<Integer> getRules() {$/;"	m	class:CloseRule
getSelectedDate	src/com/squareup/timessquare/CalendarPickerView.java	/^    public Date getSelectedDate() {$/;"	m	class:CalendarPickerView
getSelectedDates	src/com/squareup/timessquare/CalendarPickerView.java	/^    public List<Date> getSelectedDates() {$/;"	m	class:CalendarPickerView
getValue	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  public int getValue() {$/;"	m	class:MonthCellDescriptor
getView	src/com/squareup/timessquare/CalendarPickerView.java	/^        @Override public View getView(int position, View convertView, ViewGroup parent) {$/;"	m	class:CalendarPickerView.MonthAdapter
getYear	src/com/squareup/timessquare/MonthDescriptor.java	/^  public int getYear() {$/;"	m	class:MonthDescriptor
grid	src/com/squareup/timessquare/MonthView.java	/^  CalendarGridView grid;$/;"	f	class:MonthView
gx	Session.vim	/^nmap gx <Plug>NetrwBrowseX$/;"	m
handleClick	src/com/squareup/timessquare/CalendarPickerView.java	/^        @Override public void handleClick(MonthCellDescriptor cell) {$/;"	m	class:CalendarPickerView.CellClickedListener
handleClick	src/com/squareup/timessquare/MonthView.java	/^    void handleClick(MonthCellDescriptor cell);$/;"	m	interface:MonthView.Listener
iC	Session.vim	/^onoremap <silent> iC :call TextObjWordBasedColumn("iW")$/;"	m
ic	Session.vim	/^onoremap <silent> ic :call TextObjWordBasedColumn("iw")$/;"	m
inMode	src/com/squareup/timessquare/CalendarPickerView.java	/^        public FluentInitializer inMode(SelectionMode mode) {$/;"	m	class:CalendarPickerView.FluentInitializer
inRules	src/com/squareup/timessquare/CloseRule.java	/^    public static boolean inRules(Date d, Collection<Integer> rules) {$/;"	m	class:CloseRule
inflater	src/com/squareup/timessquare/CalendarPickerView.java	/^        private final LayoutInflater inflater;$/;"	f	class:CalendarPickerView.MonthAdapter	file:
init	src/com/squareup/timessquare/CalendarPickerView.java	/^    public FluentInitializer init(Date minDate, Date maxDate) {$/;"	m	class:CalendarPickerView
init	src/com/squareup/timessquare/CloseRule.java	/^    public static CloseRule init(Date f, Date t) {$/;"	m	class:CloseRule
init	src/com/squareup/timessquare/MonthView.java	/^  public void init(MonthDescriptor month, List<List<MonthCellDescriptor>> cells) {$/;"	m	class:MonthView
invalidDateListener	src/com/squareup/timessquare/CalendarPickerView.java	/^    private OnInvalidDateSelectedListener invalidDateListener =$/;"	f	class:CalendarPickerView	file:
isCurrentMonth	src/com/squareup/timessquare/CalendarCellView.java	/^  private boolean isCurrentMonth = false;$/;"	f	class:CalendarCellView	file:
isCurrentMonth	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  private final boolean isCurrentMonth;$/;"	f	class:MonthCellDescriptor	file:
isCurrentMonth	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  public boolean isCurrentMonth() {$/;"	m	class:MonthCellDescriptor
isDateSelectable	src/com/squareup/timessquare/CalendarPickerView.java	/^        boolean isDateSelectable(Date date);$/;"	m	interface:CalendarPickerView.DateSelectableFilter
isDateSelectable	src/com/squareup/timessquare/CalendarPickerView.java	/^    private boolean isDateSelectable(Date date) {$/;"	m	class:CalendarPickerView	file:
isEnabled	src/com/squareup/timessquare/CalendarPickerView.java	/^        @Override public boolean isEnabled(int position) {$/;"	m	class:CalendarPickerView.MonthAdapter
isHeaderRow	src/com/squareup/timessquare/CalendarRowView.java	/^  private boolean isHeaderRow;$/;"	f	class:CalendarRowView	file:
isSelectable	src/com/squareup/timessquare/CalendarCellView.java	/^  private boolean isSelectable = false;$/;"	f	class:CalendarCellView	file:
isSelectable	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  private final boolean isSelectable;$/;"	f	class:MonthCellDescriptor	file:
isSelectable	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  public boolean isSelectable() {$/;"	m	class:MonthCellDescriptor
isSelected	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  private boolean isSelected;$/;"	f	class:MonthCellDescriptor	file:
isSelected	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  public boolean isSelected() {$/;"	m	class:MonthCellDescriptor
isToday	src/com/squareup/timessquare/CalendarCellView.java	/^  private boolean isToday = false;$/;"	f	class:CalendarCellView	file:
isToday	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  private final boolean isToday;$/;"	f	class:MonthCellDescriptor	file:
isToday	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  public boolean isToday() {$/;"	m	class:MonthCellDescriptor
label	src/com/squareup/timessquare/MonthDescriptor.java	/^  private String label;$/;"	f	class:MonthDescriptor	file:
listener	src/com/squareup/timessquare/CalendarPickerView.java	/^    private final MonthView.Listener listener = new CellClickedListener();$/;"	f	class:CalendarPickerView	file:
listener	src/com/squareup/timessquare/CalendarRowView.java	/^  private MonthView.Listener listener;$/;"	f	class:CalendarRowView	file:
listener	src/com/squareup/timessquare/MonthView.java	/^  private Listener listener;$/;"	f	class:MonthView	file:
mFrom	src/com/squareup/timessquare/CloseRule.java	/^    private Date mFrom;$/;"	f	class:CloseRule	file:
mRules	src/com/squareup/timessquare/CloseRule.java	/^    private Set<Integer> mRules = new HashSet<Integer>();$/;"	f	class:CloseRule	file:
mTo	src/com/squareup/timessquare/CloseRule.java	/^    private Date mTo;$/;"	f	class:CloseRule	file:
maxCal	src/com/squareup/timessquare/CalendarPickerView.java	/^    private final Calendar maxCal = Calendar.getInstance();$/;"	f	class:CalendarPickerView	file:
maxDate	src/com/squareup/timessquare/CalendarPickerView.java	/^    private static Calendar maxDate(List<Calendar> selectedCals) {$/;"	m	class:CalendarPickerView	file:
maxDate	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private Date maxDate;$/;"	f	class:CalendarPickerViewTest	file:
minCal	src/com/squareup/timessquare/CalendarPickerView.java	/^    private final Calendar minCal = Calendar.getInstance();$/;"	f	class:CalendarPickerView	file:
minDate	src/com/squareup/timessquare/CalendarPickerView.java	/^    private static Calendar minDate(List<Calendar> selectedCals) {$/;"	m	class:CalendarPickerView	file:
minDate	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private Date minDate;$/;"	f	class:CalendarPickerViewTest	file:
month	src/com/squareup/timessquare/MonthDescriptor.java	/^  private final int month;$/;"	f	class:MonthDescriptor	file:
monthCounter	src/com/squareup/timessquare/CalendarPickerView.java	/^    private final Calendar monthCounter = Calendar.getInstance();$/;"	f	class:CalendarPickerView	file:
monthIndex	src/com/squareup/timessquare/CalendarPickerView.java	/^        public int monthIndex;$/;"	f	class:CalendarPickerView.MonthCellWithMonthIndex
monthNameFormat	src/com/squareup/timessquare/CalendarPickerView.java	/^    private DateFormat monthNameFormat;$/;"	f	class:CalendarPickerView	file:
months	src/com/squareup/timessquare/CalendarPickerView.java	/^    final List<MonthDescriptor> months = new ArrayList<MonthDescriptor>();$/;"	f	class:CalendarPickerView
oldNumRows	src/com/squareup/timessquare/CalendarGridView.java	/^  private int oldNumRows;$/;"	f	class:CalendarGridView	file:
oldWidthMeasureSize	src/com/squareup/timessquare/CalendarGridView.java	/^  private int oldWidthMeasureSize;$/;"	f	class:CalendarGridView	file:
onClick	src/com/squareup/timessquare/CalendarRowView.java	/^  @Override public void onClick(View v) {$/;"	m	class:CalendarRowView
onCreateDrawableState	src/com/squareup/timessquare/CalendarCellView.java	/^  @Override protected int[] onCreateDrawableState(int extraSpace) {$/;"	m	class:CalendarCellView
onDateSelected	src/com/squareup/timessquare/CalendarPickerView.java	/^        void onDateSelected(Date date);$/;"	m	interface:CalendarPickerView.OnDateSelectedListener
onFinishInflate	src/com/squareup/timessquare/MonthView.java	/^  @Override protected void onFinishInflate() {$/;"	m	class:MonthView
onInvalidDateSelected	src/com/squareup/timessquare/CalendarPickerView.java	/^        @Override public void onInvalidDateSelected(Date date) {$/;"	m	class:CalendarPickerView.DefaultOnInvalidDateSelectedListener
onInvalidDateSelected	src/com/squareup/timessquare/CalendarPickerView.java	/^        void onInvalidDateSelected(Date date);$/;"	m	interface:CalendarPickerView.OnInvalidDateSelectedListener
onLayout	src/com/squareup/timessquare/CalendarGridView.java	/^  @Override protected void onLayout(boolean changed, int left, int top, int right, int bottom) {$/;"	m	class:CalendarGridView
onLayout	src/com/squareup/timessquare/CalendarRowView.java	/^  @Override protected void onLayout(boolean changed, int left, int top, int right, int bottom) {$/;"	m	class:CalendarRowView
onMeasure	src/com/squareup/timessquare/CalendarGridView.java	/^  @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {$/;"	m	class:CalendarGridView
onMeasure	src/com/squareup/timessquare/CalendarPickerView.java	/^    @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {$/;"	m	class:CalendarPickerView
onMeasure	src/com/squareup/timessquare/CalendarRowView.java	/^  @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {$/;"	m	class:CalendarRowView
rangeState	src/com/squareup/timessquare/CalendarCellView.java	/^  private RangeState rangeState = RangeState.NONE;$/;"	f	class:CalendarCellView	file:
rangeState	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  private RangeState rangeState;$/;"	f	class:MonthCellDescriptor	file:
s:cpo_save	Session.vim	/^let s:cpo_save=&cpo$/;"	v
s:l	Session.vim	/^let s:l = 7 - ((6 * winheight(0) + 16) \/ 33)$/;"	v
s:so_save	Session.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:sx	Session.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:wipebuf	Session.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
sameDate	src/com/squareup/timessquare/CalendarPickerView.java	/^    private static boolean sameDate(Calendar cal, Calendar selectedDate) {$/;"	m	class:CalendarPickerView	file:
sameDate	src/com/squareup/timessquare/CloseRule.java	/^    private static boolean sameDate(Date d1, Date d2) {$/;"	m	class:CloseRule	file:
sameMonth	src/com/squareup/timessquare/CalendarPickerView.java	/^    private static boolean sameMonth(Calendar cal, MonthDescriptor month) {$/;"	m	class:CalendarPickerView	file:
scrollToSelectedMonth	src/com/squareup/timessquare/CalendarPickerView.java	/^    private void scrollToSelectedMonth(final int selectedIndex) {$/;"	m	class:CalendarPickerView	file:
selectDate	src/com/squareup/timessquare/CalendarPickerView.java	/^    public boolean selectDate(Date date) {$/;"	m	class:CalendarPickerView
selectDateAndGetCells	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private List<List<MonthCellDescriptor>> selectDateAndGetCells(int month, int year,$/;"	m	class:CalendarPickerViewTest	file:
selectDateDoesntSelectDisabledCell	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void selectDateDoesntSelectDisabledCell() {$/;"	m	class:CalendarPickerViewTest
selectDateReturnsTrueForDateInRange	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void selectDateReturnsTrueForDateInRange() {$/;"	m	class:CalendarPickerViewTest
selectDateThrowsExceptionForDatesOutOfRange	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void selectDateThrowsExceptionForDatesOutOfRange() {$/;"	m	class:CalendarPickerViewTest
selectedCals	src/com/squareup/timessquare/CalendarPickerView.java	/^    final List<Calendar> selectedCals = new ArrayList<Calendar>();$/;"	f	class:CalendarPickerView
selectedCells	src/com/squareup/timessquare/CalendarPickerView.java	/^    final List<MonthCellDescriptor> selectedCells = new ArrayList<MonthCellDescriptor>();$/;"	f	class:CalendarPickerView
selectionMode	src/com/squareup/timessquare/CalendarPickerView.java	/^    SelectionMode selectionMode;$/;"	f	class:CalendarPickerView
setCurrentMonth	src/com/squareup/timessquare/CalendarCellView.java	/^  public void setCurrentMonth(boolean isCurrentMonth) {$/;"	m	class:CalendarCellView
setDateSelectableFilter	src/com/squareup/timessquare/CalendarPickerView.java	/^    public void setDateSelectableFilter(DateSelectableFilter listener) {$/;"	m	class:CalendarPickerView
setIsHeaderRow	src/com/squareup/timessquare/CalendarRowView.java	/^  public void setIsHeaderRow(boolean isHeaderRow) {$/;"	m	class:CalendarRowView
setLabel	src/com/squareup/timessquare/MonthDescriptor.java	/^  void setLabel(String label) {$/;"	m	class:MonthDescriptor
setListener	src/com/squareup/timessquare/CalendarRowView.java	/^  public void setListener(MonthView.Listener listener) {$/;"	m	class:CalendarRowView
setMidnight	src/com/squareup/timessquare/CalendarPickerView.java	/^    static void setMidnight(Calendar cal) {$/;"	m	class:CalendarPickerView
setNumRows	src/com/squareup/timessquare/CalendarGridView.java	/^  public void setNumRows(int numRows) {$/;"	m	class:CalendarGridView
setOnDateSelectedListener	src/com/squareup/timessquare/CalendarPickerView.java	/^    public void setOnDateSelectedListener(OnDateSelectedListener listener) {$/;"	m	class:CalendarPickerView
setOnInvalidDateSelectedListener	src/com/squareup/timessquare/CalendarPickerView.java	/^    public void setOnInvalidDateSelectedListener(OnInvalidDateSelectedListener listener) {$/;"	m	class:CalendarPickerView
setRangeState	src/com/squareup/timessquare/CalendarCellView.java	/^  public void setRangeState(MonthCellDescriptor.RangeState rangeState) {$/;"	m	class:CalendarCellView
setRangeState	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  public void setRangeState(RangeState rangeState) {$/;"	m	class:MonthCellDescriptor
setSelectable	src/com/squareup/timessquare/CalendarCellView.java	/^  public void setSelectable(boolean isSelectable) {$/;"	m	class:CalendarCellView
setSelected	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  public void setSelected(boolean selected) {$/;"	m	class:MonthCellDescriptor
setToday	src/com/squareup/timessquare/CalendarCellView.java	/^  public void setToday(boolean isToday) {$/;"	m	class:CalendarCellView
setUp	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void setUp() throws Exception {$/;"	m	class:CalendarPickerViewTest
test	src/com/squareup/timessquare/CalendarPickerView.java	/^    int test = 0;$/;"	f	class:CalendarPickerView
testFirstDayOfWeekIsMonday	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testFirstDayOfWeekIsMonday() throws Exception {$/;"	m	class:CalendarPickerViewTest
testHashSet	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testHashSet() throws Exception {$/;"	m	class:CalendarPickerViewTest
testInitDecember	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testInitDecember() throws Exception {$/;"	m	class:CalendarPickerViewTest
testInitJanuary	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testInitJanuary() throws Exception {$/;"	m	class:CalendarPickerViewTest
testInitMidyear	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testInitMidyear() throws Exception {$/;"	m	class:CalendarPickerViewTest
testInitSingleWithMultipleSelections	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testInitSingleWithMultipleSelections() throws Exception {$/;"	m	class:CalendarPickerViewTest
testIsSelected	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testIsSelected() throws Exception {$/;"	m	class:CalendarPickerViewTest
testLocaleSetting	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testLocaleSetting() throws Exception {$/;"	m	class:CalendarPickerViewTest
testMinAndMaxMixup	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testMinAndMaxMixup() throws Exception {$/;"	m	class:CalendarPickerViewTest
testMultiselectWithNoInitialSelections	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testMultiselectWithNoInitialSelections() throws Exception {$/;"	m	class:CalendarPickerViewTest
testNotCallingInit	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testNotCallingInit() throws Exception {$/;"	m	class:CalendarPickerViewTest
testNullDates	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testNullDates() throws Exception {$/;"	m	class:CalendarPickerViewTest
testOnDateConfiguredListener	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testOnDateConfiguredListener() {$/;"	m	class:CalendarPickerViewTest
testOnlyShowingFiveWeeks	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testOnlyShowingFiveWeeks() throws Exception {$/;"	m	class:CalendarPickerViewTest
testOnlyShowingFourWeeks	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testOnlyShowingFourWeeks() throws Exception {$/;"	m	class:CalendarPickerViewTest
testRangeSelectionWithNoInitialSelection	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testRangeSelectionWithNoInitialSelection() throws Exception {$/;"	m	class:CalendarPickerViewTest
testRangeStateOnDateSelections	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testRangeStateOnDateSelections() {$/;"	m	class:CalendarPickerViewTest
testRangeWithOneInitialSelection	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testRangeWithOneInitialSelection() throws Exception {$/;"	m	class:CalendarPickerViewTest
testRangeWithTwoInitialSelections	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testRangeWithTwoInitialSelections() throws Exception {$/;"	m	class:CalendarPickerViewTest
testRuleFilterByDates	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testRuleFilterByDates() throws Exception {$/;"	m	class:CalendarPickerViewTest
testRuleFilterByMonth	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testRuleFilterByMonth() throws Exception {$/;"	m	class:CalendarPickerViewTest
testRuleFilterByWeekday	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testRuleFilterByWeekday() throws Exception {$/;"	m	class:CalendarPickerViewTest
testRuleIntegers	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testRuleIntegers() throws Exception {$/;"	m	class:CalendarPickerViewTest
testSelectabilityInFirstMonth	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testSelectabilityInFirstMonth() throws Exception {$/;"	m	class:CalendarPickerViewTest
testSelectabilityInLastMonth	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testSelectabilityInLastMonth() throws Exception {$/;"	m	class:CalendarPickerViewTest
testSelectedNotInRange	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testSelectedNotInRange() throws Exception {$/;"	m	class:CalendarPickerViewTest
testShowingOnlyOneMonth	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testShowingOnlyOneMonth() throws Exception {$/;"	m	class:CalendarPickerViewTest
testShowingSixWeeks	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testShowingSixWeeks() throws Exception {$/;"	m	class:CalendarPickerViewTest
testTodayIsToday	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testTodayIsToday() throws Exception {$/;"	m	class:CalendarPickerViewTest
testWeirdOverlappingYear	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testWeirdOverlappingYear() throws Exception {$/;"	m	class:CalendarPickerViewTest
testZeroDates	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    public void testZeroDates() throws Exception {$/;"	m	class:CalendarPickerViewTest
title	src/com/squareup/timessquare/MonthView.java	/^  TextView title;$/;"	f	class:MonthView
toString	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  @Override public String toString() {$/;"	m	class:MonthCellDescriptor
toString	src/com/squareup/timessquare/MonthDescriptor.java	/^  @Override public String toString() {$/;"	m	class:MonthDescriptor
today	src/com/squareup/timessquare/CalendarPickerView.java	/^    final Calendar today = Calendar.getInstance();$/;"	f	class:CalendarPickerView
today	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private Calendar today;$/;"	f	class:CalendarPickerViewTest	file:
validateAndUpdate	src/com/squareup/timessquare/CalendarPickerView.java	/^    private void validateAndUpdate() {$/;"	m	class:CalendarPickerView	file:
value	src/com/squareup/timessquare/MonthCellDescriptor.java	/^  private final int value;$/;"	f	class:MonthCellDescriptor	file:
view	test/com/squareup/timessquare/CalendarPickerViewTest.java	/^    private CalendarPickerView view;$/;"	f	class:CalendarPickerViewTest	file:
weekdayNameFormat	src/com/squareup/timessquare/CalendarPickerView.java	/^    private DateFormat weekdayNameFormat;$/;"	f	class:CalendarPickerView	file:
withDisableDates	src/com/squareup/timessquare/CloseRule.java	/^    public CloseRule withDisableDates(List<Date> dates) {$/;"	m	class:CloseRule
withLocale	src/com/squareup/timessquare/CalendarPickerView.java	/^        public FluentInitializer withLocale(Locale locale) {$/;"	m	class:CalendarPickerView.FluentInitializer
withOpenMonth	src/com/squareup/timessquare/CloseRule.java	/^    public CloseRule withOpenMonth(int month) {$/;"	m	class:CloseRule
withOpenWeekday	src/com/squareup/timessquare/CloseRule.java	/^    public CloseRule withOpenWeekday(int weekday) {$/;"	m	class:CloseRule
withSelectedDate	src/com/squareup/timessquare/CalendarPickerView.java	/^        public FluentInitializer withSelectedDate(Date selectedDates) {$/;"	m	class:CalendarPickerView.FluentInitializer
withSelectedDates	src/com/squareup/timessquare/CalendarPickerView.java	/^        public FluentInitializer withSelectedDates(Collection<Date> selectedDates) {$/;"	m	class:CalendarPickerView.FluentInitializer
year	src/com/squareup/timessquare/MonthDescriptor.java	/^  private final int year;$/;"	f	class:MonthDescriptor	file:
zt	Session.vim	/^normal! zt$/;"	m
â	Session.vim	/^cmap â <S-Left>$/;"	m
ä	Session.vim	/^cnoremap ä <S-Right>$/;"	m
æ	Session.vim	/^cmap æ <S-Right>$/;"	m
è	Session.vim	/^cnoremap è $/;"	m
ê	Session.vim	/^nmap ê mz:m+$/;"	m
ê	Session.vim	/^vmap ê :m'>+$/;"	m
ë	Session.vim	/^nmap ë mz:m-2$/;"	m
ë	Session.vim	/^vmap ë :m'<-2$/;"	m
